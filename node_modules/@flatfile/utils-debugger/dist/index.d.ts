import c from 'ansi-colors';
import { AxiosStatic } from 'axios';

declare class Debugger {
    static logHttpRequest({ method, url, statusCode, headers, startTime, error, }: {
        method: string;
        url: string;
        statusCode: number;
        headers: any;
        startTime: Date;
        error?: boolean;
    }): void;
    static logEventSubscriber(query: any, filter?: any): void;
    static logEvent(e: any): void;
    static logInfo(message: string): void;
    static logWarning(message: string): void;
    static logSuccess(message: string): void;
    static logError(message?: string, label?: string, prefix?: string): void;
    static logMethod(method: string, args: any[], result: any, success: boolean, startTime: number): void;
    static log(cb: (colors: typeof c) => string): void;
}
/**
 * Pretty log an array of arguments
 *
 * @param src
 */
declare function prettyLog(src: any): string;

declare function axiosInterceptor(axios: AxiosStatic): void;

/**
 * A method decorator that logs the method name, execution duration, and whether the execution was successful.
 * If the 'VERBOSE' environment variable is set, it also logs the input and output of the method.
 *
 * @param target The prototype of the class (since this is a static method)
 * @param propertyKey The name of the method
 * @param descriptor The property descriptor of the method
 * @returns The modified property descriptor
 */
declare function DebugMethod(): (target: any, propertyKey: string, descriptor: TypedPropertyDescriptor<any>) => TypedPropertyDescriptor<any>;

export { DebugMethod, Debugger, axiosInterceptor, prettyLog };
